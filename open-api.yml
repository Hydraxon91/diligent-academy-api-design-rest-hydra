openapi: 3.0.3
info:
  title: Movie Database
  version: '1.0'
paths:
  /movies:
    get:
      summary: get movies
      description: Retrieve a list of all movies, with optional filters for title and genre.
      parameters:
        - in: query
          name: title
          schema:
            type: string
        - in: query
          name: genre
          schema:
            type: string
      responses:
        '200':
          description: List of movies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MovieSummary'
    post:
      summary: Create a new movie
      description: Add a new movie to the collection.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Movie'
      responses:
        '201':
          description: Movie created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        '400':
          description: Bad request due to invalid input data

  /movies/{id}:
    get:
      summary: Retrieve movie by ID
      parameters:
        - name: id 
          in: path 
          required: true
          schema:
            type: integer
          description: Unique identifier for the movie.
      responses:
        '200':
          description: Movie details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        '404':
          description: Movie not found

    put:
      summary: Update a movie by ID
      parameters:
        - name: id 
          in: path
          required: true
          schema:
            type: integer
          description: Unique identifier for the movie.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Movie'
      responses:
        '200':
          description: Movie updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        '404':
          description: Movie not found

    delete:
      summary: Delete a movie by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Unique identifier for the movie.
      responses:
        '204':
          description: Movie deleted successfully
        '404':
          description: Movie not found

  /actors:
    get:
      summary: Get all actors
      description: Retrieve a list of all actors, with an optional filter by name.
      parameters:
        - in: query
          name: name
          schema:
            type: string
      responses:
        '200':
          description: List of actors
          content:
            application/json:
              schema:
                type: array 
                items:
                  $ref: '#/components/schemas/ActorSummary'
    post:
      summary: Create a new actor
      description: Add a new actor to the collection.
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/Actor'
      responses:
        '201':
          description: Actor created successfully
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Actor'
        '400':
          description: Bad request due to invalid input data

  /actors/{id}:
    get:
      summary: Retrieve actor by ID
      parameters:
        - name: id 
          in: path 
          required: true
          schema:
            type: integer
          description: Unique identifier for the actor.
      responses:
        '200':
          description: Actor details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
        '404':
          description: Actor not found

    put:
      summary: Update an actor by ID
      parameters:
        - name: id 
          in: path
          required: true
          schema:
            type: integer
          description: Unique identifier for the actor.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
      responses:
        '200':
          description: Actor updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
        '404':
          description: Actor not found

    delete:
      summary: Delete an actor by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Unique identifier for the actor.
      responses:
        '204':
          description: Actor deleted successfully
        '404':
          description: Actor not found  

components:
  schemas:
    MovieSummary:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the movie.
        title:
          type: string
          description: Title of the movie.

    Movie:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the movie.
        title:
          type: string
          description: Title of the movie.
        genres:
          type: array
          items:
            type: string
          description: Genres associated with the movie.
        plot:
          type: string
          description: Plot summary of the movie.
        releaseDate:
          type: string
          format: date
          description: Release date of the movie.
        actors:
          type: array
          items: 
            $ref: '#/components/schemas/ActorSummary'
        _links:
          type: object
          properties:
            self:
              type: string
              description: URL to this movie resource.
            actors:
              type: string
              description: URL to list of actors in this movie.

    ActorSummary:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the actor.
        name:
          type: string
          description: Name of the actor.

    Actor:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the actor.
        name:
          type: string
          description: Name of the actor.
        height:
          type: integer
          description: Height of the actor in centimeters.
        birthday:
          type: string
          format: date
          description: Birth date of the actor.
        birthplace:
          type: string
          description: Birthplace of the actor.
        movies:
          type: array
          items:
            $ref: '#/components/schemas/MovieSummary'
        _links:
          type: object
          properties:
            self:
              type: string
              description: URL to this actor resource.
            movies:
              type: string
              description: URL to the list of movies this actor has appeared in.